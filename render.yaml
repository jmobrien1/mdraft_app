services:
  - type: web
    name: mdraft-web
    env: python
    buildCommand: pip install -r requirements.txt
    runtime: python-3.11.11
    startCommand: |
      flask --app app:create_app db upgrade &&
      gunicorn --bind 0.0.0.0:$PORT --workers 2 --threads 8 --timeout 120 --access-logfile - --error-logfile - --preload wsgi:app
    healthCheckPath: /health/simple
    healthCheckTimeout: 300
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_DEBUG
        value: "0"
      - key: SECRET_KEY
        generateValue: true
      - key: GLOBAL_RATE_LIMIT
        value: "120 per minute"
      - key: QUEUE_MODE
        value: sync
      - key: USE_GCS
        value: "0"
      - key: SENTRY_ENVIRONMENT
        value: production

  - type: worker
    name: mdraft_app-worker
    env: python
    buildCommand: pip install -r requirements.txt
    runtime: python-3.11.11
    startCommand: celery -A celery_worker:celery_app worker --loglevel=info --pool=threads --concurrency=2 --without-gossip --without-mingle --without-heartbeat
    envVars:
      - key: FLASK_DEBUG
        value: "0"
      - key: QUEUE_MODE
        value: celery
      - key: USE_GCS
        value: "0"
      - key: SENTRY_ENVIRONMENT
        value: production

  - type: cron
    name: mdraft-cleanup
    env: python
    schedule: "0 6 * * *"
    buildCommand: pip install -r requirements.txt
    runtime: python-3.11.11
    startCommand: flask --app app:create_app cleanup
    envVars:
      - key: CLEANUP_DELETE_GCS
        value: "1"
      - key: RETENTION_DAYS
        value: "30"
      - key: USE_GCS
        value: "0"
