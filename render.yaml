services:
  - type: web
    name: mdraft-web
    env: python
    buildCommand: |
      pip install --no-cache-dir --upgrade pip
      pip install --no-cache-dir -r requirements-minimal.txt
    runtime: python-3.11.11
    preDeployCommand: |
      # Set fallback session backend for pre-deployment
      export SESSION_BACKEND="${SESSION_BACKEND:-filesystem}"
      export SESSION_TYPE="${SESSION_TYPE:-filesystem}"
      
      # Skip startup validation during pre-deployment (env vars not available yet)
      echo "Skipping startup validation during pre-deployment (environment variables not available)"
      
      # Run database migrations with fallback configuration
      bash scripts/migration_sentry.sh
    startCommand: gunicorn --workers 2 --threads 8 --timeout 120 wsgi:app
    healthCheckPath: /health/simple
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: wsgi.py
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: DATABASE_URL
        sync: false
      - key: SECRET_KEY
        sync: false
        # Note: Set this in Render Dashboard → Environment → Secret files/variables
      - key: MDRAFT_PUBLIC_MODE
        value: "0"
      - key: LOGIN_DISABLED
        value: "false"
      - key: SESSION_BACKEND
        value: "redis"
      - key: SESSION_COOKIE_SECURE
        value: "true"
      - key: SESSION_COOKIE_SAMESITE
        value: "Lax"
      - key: REMEMBER_COOKIE_SECURE
        value: "true"
      - key: REMEMBER_COOKIE_SAMESITE
        value: "Lax"
      - key: ALLOWLIST
        value: "admin@example.com"
      - key: FLASK_LIMITER_STORAGE_URI
        sync: false
      - key: GLOBAL_RATE_LIMIT
        value: 120 per minute
      - key: CELERY_BROKER_URL
        sync: false
      - key: CELERY_RESULT_BACKEND
        sync: false
      - key: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/secrets/gcp.json
      - key: GCS_BUCKET_NAME
        sync: false
      - key: GCS_PROCESSED_BUCKET_NAME
        sync: false
      - key: GOOGLE_CLOUD_PROJECT
        sync: false
      - key: QUEUE_MODE
        value: sync   # change to 'async' to enable queueing
      - key: USE_GCS
        value: "0"
      - key: SENTRY_DSN
        sync: false
      - key: SENTRY_ENVIRONMENT
        value: production
      - key: WEBHOOK_SECRET
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: ADMIN_TOKEN
        sync: false

  - type: worker
    name: mdraft_app-worker
    env: python
    buildCommand: |
      pip install --no-cache-dir --upgrade pip
      pip install --no-cache-dir -r requirements-minimal.txt
    runtime: python-3.11.11
    # No preDeployCommand for worker - migrations should only run on web service
    startCommand: celery -A celery_worker.celery worker --loglevel=info --pool=threads --concurrency=4 --without-gossip --without-mingle
    envVars:
      - key: FLASK_APP
        value: wsgi.py
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: WORKER_SERVICE
        value: "true"
      - key: DATABASE_URL
        sync: false
      - key: CELERY_BROKER_URL
        sync: false
      - key: CELERY_RESULT_BACKEND
        sync: false
      - key: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/secrets/gcp.json
      - key: GCS_BUCKET_NAME
        sync: false
      - key: GCS_PROCESSED_BUCKET_NAME
        sync: false
      - key: GOOGLE_CLOUD_PROJECT
        sync: false
      - key: SENTRY_DSN
        sync: false
      - key: SENTRY_ENVIRONMENT
        value: production
      - key: WEBHOOK_SECRET
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: ADMIN_TOKEN
        sync: false
      - key: MDRAFT_PUBLIC_MODE
        value: "0"

  - type: cron
    name: mdraft-cleanup
    env: python
    schedule: "0 6 * * *"           # daily at 06:00 UTC
    buildCommand: |
      pip install --no-cache-dir --upgrade pip
      pip install --no-cache-dir -r requirements-minimal.txt
    runtime: python-3.11.11
    startCommand: flask --app app:create_app cleanup
    envVars:
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: DATABASE_URL
        sync: false
      - key: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/secrets/gcp.json
      - key: GCS_BUCKET_NAME
        sync: false
      - key: GCS_PROCESSED_BUCKET_NAME
        sync: false
      - key: GOOGLE_CLOUD_PROJECT
        sync: false
      - key: CLEANUP_DELETE_GCS
        value: "1"
      - key: RETENTION_DAYS
        value: "30"
