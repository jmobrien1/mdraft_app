"""Add proposal and requirement models for compliance matrix

Revision ID: dc5d95cfb925
Revises: 926e733b4f22
Create Date: 2025-08-14 10:15:26.234418

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dc5d95cfb925'
down_revision = '926e733b4f22'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allowlist',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('plan', sa.String(length=64), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('allowlist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_allowlist_email'), ['email'], unique=True)

    op.create_table('proposals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proposal_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('document_type', sa.String(length=64), nullable=False),
    sa.Column('gcs_uri', sa.Text(), nullable=True),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('section_mapping', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('requirement_id', sa.String(length=32), nullable=False),
    sa.Column('requirement_text', sa.Text(), nullable=False),
    sa.Column('section_ref', sa.String(length=128), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('source_document', sa.String(length=255), nullable=False),
    sa.Column('assigned_owner', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('requirements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_requirements_requirement_id'), ['requirement_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plan', sa.String(length=64), nullable=False))
        batch_op.add_column(sa.Column('last_login_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('revoked', sa.Boolean(), nullable=False))
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_column('revoked')
        batch_op.drop_column('last_login_at')
        batch_op.drop_column('plan')

    with op.batch_alter_table('requirements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_requirements_requirement_id'))

    op.drop_table('requirements')
    op.drop_table('proposal_documents')
    op.drop_table('proposals')
    with op.batch_alter_table('allowlist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_allowlist_email'))

    op.drop_table('allowlist')
    # ### end Alembic commands ###
